//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

package cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface;

message im_cmd_info_KEYS {
	string interface_name = 1;
}

message im_cmd_damp_st {
	uint32 penalty = 1;
	bool is_suppressed_enabled = 2;
	uint32 seconds_remaining = 3;
	uint32 half_life = 4;
	uint32 reuse_threshold = 5;
	uint32 suppress_threshold = 6;
	uint32 maximum_suppress_time = 7;
	uint32 restart_penalty = 8;
}

message im_cmd_mac_addr_st {
	string address = 1;
}

message im_cmd_carrier_delay_st {
	uint32 carrier_delay_up = 1;
	uint32 carrier_delay_down = 2;
}

message im_cmd_arp_info_st {
	uint32 arp_timeout = 1;
	string arp_type_name = 2;
	bool arp_is_learning_disabled = 3;
}

message im_cmd_ip_info_st {
	string ip_address = 1;
	uint32 subnet_mask_length = 2;
}

message im_cmd_fr_info {
	string fr_encapsulation_type = 1;
	string lmi_type = 2;
	uint32 lmidlci = 3;
	bool is_nni = 4;
	bool is_dte = 5;
	bool is_lmi_up = 6;
	bool is_lmi_nni_dce_up = 7;
	bool is_lmi_enabled = 8;
	uint32 enquiries_received = 9;
	uint32 enquiries_sent = 10;
	uint32 status_received = 11;
	uint32 status_sent = 12;
	uint32 update_status_received = 13;
	uint32 update_status_sent = 14;
}

message vlan_double_tag_stack {
	uint32 outer_tag = 1;
	uint32 second_tag = 2;
}

message efp_range {
	uint32 vlan_id__low = 1;
	uint32 vlan_id__high = 2;
}

message efp_tag_match {
	string ethertype = 1;
	repeated efp_range vlan_ranges = 2;
	string priority = 3;
}

message efp_vlan_tag {
	string ethertype = 1;
	uint32 vlan_id = 2;
}

message efp_tag_local_traffic_stack {
	repeated efp_vlan_tag local_traffic_tags = 1;
}

message efp_description {
	repeated efp_tag_match tags_to_match = 1;
	string payload_ethertype = 2;
	uint32 tags_popped = 3;
	repeated efp_vlan_tag pushes = 4;
	efp_tag_local_traffic_stack local_traffic_stack = 5;
	sint32 is_exact_match = 6;
	sint32 is_native_vlan = 7;
	sint32 is_native_preserving = 8;
	string source_mac_match = 9;
	string destination_mac_match = 10;
}

message vlan_tag_stack_type {
	string vlan_encapsulation = 1;
	uint32 tag = 2;
	vlan_double_tag_stack stack = 3;
	uint32 outer_tag = 4;
	uint32 native_tag = 5;
	uint32 dot1ad_tag = 6;
	uint32 dot1ad_native_tag = 7;
	efp_description service_instance_details = 8;
	vlan_double_tag_stack dot1ad_dot1q_stack = 9;
	uint32 dot1ad_outer_tag = 10;
}

message vlan_switched_info {
	string mode = 1;
	efp_description trunk_vlan_ranges = 2;
	uint32 access_vlan = 3;
}

message vlan_intf_generic {
	vlan_tag_stack_type encapsulation_details = 1;
	vlan_switched_info vlan_switched = 2;
}

message ppp_show_int_ncp_info {
	string ncp_state = 1;
	string ncp_identifier = 2;
}

message ppp_show_int_info {
	string lcp_state = 1;
	sint32 is_loopback_detected = 2;
	uint32 keepalive_period = 3;
	sint32 is_mp_bundle_member = 4;
	sint32 is_multilink_open = 5;
	repeated ppp_show_int_ncp_info ncp_info_array = 6;
}

message im_cmd_encaps_info {
	string encapsulation_type = 1;
	im_cmd_fr_info frame_relay_information = 2;
	vlan_intf_generic dot1q_information = 3;
	ppp_show_int_info ppp_information = 4;
}

message srp_failure_info {
	string type = 1;
	string reported_state = 2;
	string debounced_state = 3;
	string current_state = 4;
	uint64 stable_time = 5;
	uint32 debounced_delay = 6;
}

message srp_ips_side_detail {
	string mac_address = 1;
	string wrap_state = 2;
	uint32 packet_sent_timer = 3;
	uint32 send_timer_time_remaining = 4;
	uint32 wtr_timer_remaining = 5;
	string self_detected_request = 6;
	string remote_request = 7;
	repeated srp_failure_info asserted_failures = 8;
	string rx_neighbor_mac_address = 9;
	string rx_message_type = 10;
	string rx_path_type = 11;
	uint32 rx_ttl = 12;
	sint32 rx_packet_test = 13;
	string tx_neighbor_mac_address = 14;
	string tx_message_type = 15;
	string tx_path_type = 16;
	uint32 tx_ttl = 17;
	sint32 tx_packet_test = 18;
	uint32 delay_keep_alive_trigger = 19;
}

message srp_ips_detail {
	string mac_address = 1;
	sint32 is_inter_card_bus_enabled = 2;
	uint32 wtr_timer_period = 3;
	srp_ips_side_detail side_a = 4;
	srp_ips_side_detail side_b = 5;
}

message srp_ips_info {
	sint32 is_admin_down = 1;
	repeated srp_ips_detail local_information = 2;
}

message srp_topology_node_data {
	uint32 hop_count = 1;
	string mac_address = 2;
	string i_pv4_address = 3;
	sint32 is_wrapped = 4;
	sint32 is_srr_supported = 5;
	string node_name = 6;
}

message srp_topology_map {
	uint32 topology_timer = 1;
	uint32 next_topology_packet_delay = 2;
	uint32 time_since_last_topology_packet_received = 3;
	uint32 time_since_last_topology_change = 4;
	uint32 number_of_nodes_on_ring = 5;
	repeated srp_topology_node_data ring_node_list = 6;
}

message srp_topology_info {
	sint32 is_admin_down = 1;
	repeated srp_topology_map local_information = 2;
}

message srr_node_data {
	string node_name = 1;
	sint32 srr_entry_exits = 2;
	string mac_address = 3;
	string outer_failure = 4;
	string inner_failure = 5;
	sint32 is_last_announce_received = 6;
	uint32 last_announce_received_time = 7;
}

message srp_srr_detail {
	uint32 version_number = 1;
	sint32 is_wrong_version_received = 2;
	uint32 last_wrong_version_receive_time = 3;
	string mac_address = 4;
	string node_state = 5;
	sint32 is_outer_ring_in_use = 6;
	sint32 is_inner_ring_in_use = 7;
	sint32 is_announce = 8;
	string outer_fail_type = 9;
	string inner_fail_type = 10;
	uint32 packet_send_timer = 11;
	uint32 next_srr_packet_send_time = 12;
	uint32 single_ring_bw = 13;
	uint32 wtr_time = 14;
	uint32 wtr_timer_remaining_outer_ring = 15;
	uint32 wtr_timer_remaining_inner_ring = 16;
	repeated srr_node_data nodes_on_ring = 17;
	repeated srr_node_data nodes_not_on_ring = 18;
}

message srp_srr_info {
	sint32 is_admin_down = 1;
	sint32 is_srr_enabled = 2;
	repeated srp_srr_detail srr_detailed_info = 3;
}

message srp_rate_limit_detail {
	uint32 min_priority_value = 1;
}

message srp_rate_limit_info {
	sint32 is_admin_down = 1;
	repeated srp_rate_limit_detail rate_limit_detailed_info = 2;
}

message srp_all_info {
	srp_ips_info ips_info = 1;
	srp_topology_info topology_info = 2;
	srp_srr_info srr_info = 3;
	srp_rate_limit_info rate_limit_info = 4;
}

message ifstats_srp_per_side_data_rate_st {
	uint32 bit_rate_sent = 1;
	uint32 packet_rate_sent = 2;
	uint32 bit_rate_received = 3;
	uint32 packet_rate_received = 4;
}

message ifstats_srp_per_side_errors_st {
	uint32 error_packets_received = 1;
	uint32 crc_errors = 2;
	uint32 input_insufficient_resource_events = 3;
	uint32 mac_aborts_received = 4;
	uint32 mac_runt_packets_received = 5;
	uint32 mac_giant_packets_received = 6;
	uint32 framer_runt_packets_received = 7;
	uint32 framer_giant_packets_received = 8;
	uint32 framer_aborts_received = 9;
}

message ifstatsbag_srp {
	uint32 data_rate_interval = 1;
	ifstats_srp_per_side_data_rate_st side_a_data_rate = 2;
	ifstats_srp_per_side_data_rate_st side_b_data_rate = 3;
	ifstats_srp_per_side_errors_st side_a_errors = 4;
	ifstats_srp_per_side_errors_st side_b_errors = 5;
}

message im_cmd_srp_info {
	srp_all_info srp_information = 1;
	ifstatsbag_srp srp_statistics = 2;
}

message im_cmd_tunnel_info {
	string source_name = 1;
	string source_i_pv4_address = 2;
	string destination_i_pv4_address = 3;
	string tunnel_type = 4;
	uint32 key = 5;
	uint32 ttl = 6;
}

message bm_lacp_counters {
	uint32 lacpd_us_received = 1;
	uint32 lacpd_us_transmitted = 2;
	uint32 marker_packets_received = 3;
	uint32 marker_responses_transmitted = 4;
	uint32 illegal_packets_received = 5;
	uint32 excess_lacpd_us_received = 6;
	uint32 excess_marker_packets_received = 7;
	uint32 defaulted = 8;
	uint32 expired = 9;
	uint32 last_cleared_sec = 10;
	uint32 last_cleared_nsec = 11;
}

message bm_lacp_link_data {
	string interface_handle = 1;
	uint32 actor_system_priority = 2;
	string actor_system_mac_address = 3;
	uint32 actor_operational_key = 4;
	uint32 partner_system_priority = 5;
	string partner_system_mac_address = 6;
	uint32 partner_operational_key = 7;
	uint32 selected_aggregator_id = 8;
	uint32 attached_aggregator_id = 9;
	uint32 actor_port_id = 10;
	uint32 actor_port_priority = 11;
	uint32 partner_port_id = 12;
	uint32 partner_port_priority = 13;
	uint32 actor_port_state = 14;
	uint32 partner_port_state = 15;
}

message bm_mbr_state_reason_data_type {
	string reason_type = 1;
	string severity = 2;
}

message bm_mux_data {
	string mux_state = 1;
	uint32 error = 2;
	string member_mux_state_reason = 3;
	bm_mbr_state_reason_data_type member_mux_state_reason_data = 4;
	string member_state = 5;
	string mux_state_reason = 6;
}

message bm_mac_addr_st {
	string address = 1;
}

message bm_member_data {
	string interface_name = 1;
	uint32 port_priority = 2;
	uint32 port_number = 3;
	uint32 underlying_link_id = 4;
	uint32 link_order_number = 5;
	uint32 iccp_node = 6;
	uint32 bandwidth = 7;
	string lacp_enabled = 8;
	bm_lacp_counters counters = 9;
	bm_lacp_link_data link_data = 10;
	bm_mux_data member_mux_data = 11;
	string member_type = 12;
	string member_name = 13;
	bm_mac_addr_st mac_address = 14;
	uint32 replication_error = 15;
	uint64 bandwidth64_bit = 16;
}

message im_cmd_bundle_info {
	repeated bm_member_data member_list = 1;
}

message serial_interface {
	string timeslots = 1;
}

message im_sonet_pos_info_interface {
	string aps_state = 1;
}

message pfi_ip_addr_union {
	string afi = 1;
	string ipv4 = 2;
	string ipv6 = 3;
}

message im_cmd_tunl_gre_info {
	string source_name = 1;
	pfi_ip_addr_union source_ip_address = 2;
	pfi_ip_addr_union destination_ip_address = 3;
	uint32 destination_ip_address_length = 4;
	uint32 tunnel_tos = 5;
	uint32 tunnel_ttl = 6;
	uint32 key = 7;
	uint32 keepalive_period = 8;
	uint32 keepalive_maximum_retry = 9;
	string tunnel_mode = 10;
	string tunnel_mode_direction = 11;
	string keepalive_state = 12;
	string df_bit_state = 13;
	string key_bit_state = 14;
}

message pwhe_ether_interface_info {
	string interface_list_name = 1;
	uint32 l2_overhead = 2;
	uint32 internal_label = 3;
}

message cem_interface {
	string timeslots = 1;
	uint32 payload = 2;
	uint32 dejitter_buffer = 3;
	sint32 framing = 4;
}

message im_cmd_gcc_per_port_info {
	string derived_mode = 1;
	string sec_state = 2;
}

message im_cmd_intf_type_info {
	string interface_type_info = 1;
	im_cmd_srp_info srp_information = 2;
	im_cmd_tunnel_info tunnel_information = 3;
	im_cmd_bundle_info bundle_information = 4;
	serial_interface serial_information = 5;
	im_sonet_pos_info_interface sonet_pos_information = 6;
	im_cmd_tunl_gre_info tunnel_gre_information = 7;
	pwhe_ether_interface_info pseudowire_head_end_information = 8;
	cem_interface cem_information = 9;
	im_cmd_gcc_per_port_info gcc_information = 10;
}

message statsdbag_datarate {
	uint64 input_data_rate = 1;
	uint64 input_packet_rate = 2;
	uint64 output_data_rate = 3;
	uint64 output_packet_rate = 4;
	uint64 peak_input_data_rate = 5;
	uint64 peak_input_packet_rate = 6;
	uint64 peak_output_data_rate = 7;
	uint64 peak_output_packet_rate = 8;
	uint64 bandwidth = 9;
	uint32 load_interval = 10;
	uint32 output_load = 11;
	uint32 input_load = 12;
	uint32 reliability = 13;
}

message ifstatsbag_generic {
	uint64 packets_received = 1;
	uint64 bytes_received = 2;
	uint64 packets_sent = 3;
	uint64 bytes_sent = 4;
	uint64 multicast_packets_received = 5;
	uint64 broadcast_packets_received = 6;
	uint64 multicast_packets_sent = 7;
	uint64 broadcast_packets_sent = 8;
	uint32 output_drops = 9;
	uint32 output_queue_drops = 10;
	uint32 input_drops = 11;
	uint32 input_queue_drops = 12;
	uint32 runt_packets_received = 13;
	uint32 giant_packets_received = 14;
	uint32 throttled_packets_received = 15;
	uint32 parity_packets_received = 16;
	uint32 unknown_protocol_packets_received = 17;
	uint32 input_errors = 18;
	uint32 crc_errors = 19;
	uint32 input_overruns = 20;
	uint32 framing_errors_received = 21;
	uint32 input_ignored_packets = 22;
	uint32 input_aborts = 23;
	uint32 output_errors = 24;
	uint32 output_underruns = 25;
	uint32 output_buffer_failures = 26;
	uint32 output_buffers_swapped_out = 27;
	uint32 applique = 28;
	uint32 resets = 29;
	uint32 carrier_transitions = 30;
	uint32 availability_flag = 31;
	uint64 last_data_time = 32;
	uint64 hardware_timestamp = 33;
	uint32 seconds_since_last_clear_counters = 34;
	uint32 last_discontinuity_time = 35;
	uint32 seconds_since_packet_received = 36;
	uint32 seconds_since_packet_sent = 37;
}

message ifstatsbag_basic {
	uint64 packets_received = 1;
	uint64 bytes_received = 2;
	uint64 packets_sent = 3;
	uint64 bytes_sent = 4;
	uint32 input_drops = 5;
	uint32 input_queue_drops = 6;
	uint32 input_errors = 7;
	uint32 unknown_protocol_packets_received = 8;
	uint32 output_drops = 9;
	uint32 output_queue_drops = 10;
	uint32 output_errors = 11;
	uint32 last_data_time = 12;
	uint32 seconds_since_last_clear_counters = 13;
	uint32 last_discontinuity_time = 14;
	uint32 seconds_since_packet_received = 15;
	uint32 seconds_since_packet_sent = 16;
}

message im_cmd_if_stats {
	string stats_type = 1;
	ifstatsbag_generic full_interface_stats = 2;
	ifstatsbag_basic basic_interface_stats = 3;
}

message stats_bag_id_td {
	string id_type = 1;
	uint32 unused = 2;
	string interface_handle = 3;
	string node_id = 4;
	uint32 feature_id = 5;
	uint32 id = 6;
}

message stats_bag_block_st {
	string type = 1;
	uint32 count = 2;
	string data = 3;
}

message stats_bag_element_st {
	string key = 1;
	repeated stats_bag_block_st block_array = 2;
}

message stats_data {
	uint32 stats_type = 1;
	stats_bag_id_td stats_id = 2;
	string contents = 3;
	repeated stats_bag_block_st block_array = 4;
	repeated stats_bag_element_st element_array = 5;
}

message im_cmd_info {
	string interface_handle = 50;
	string interface_type = 51;
	string hardware_type_string = 52;
	string state = 53;
	string line_state = 54;
	string encapsulation = 55;
	string encapsulation_type_string = 56;
	uint32 mtu = 57;
	bool is_l2_transport_enabled = 58;
	uint32 state_transition_count = 59;
	uint64 last_state_transition_time = 60;
	bool is_dampening_enabled = 61;
	im_cmd_damp_st dampening_information = 62;
	uint32 speed = 63;
	uint32 crc_length = 64;
	bool is_scramble_enabled = 65;
	string duplexity = 66;
	string media_type = 67;
	string link_type = 68;
	string in_flow_control = 69;
	string out_flow_control = 70;
	im_cmd_mac_addr_st mac_address = 71;
	im_cmd_mac_addr_st burned_in_address = 72;
	im_cmd_carrier_delay_st carrier_delay = 73;
	uint32 bandwidth = 74;
	uint32 max_bandwidth = 75;
	uint32 keepalive = 76;
	bool is_l2_looped = 77;
	string parent_interface_name = 78;
	string loopback_configuration = 79;
	string description = 80;
	im_cmd_arp_info_st arp_information = 81;
	im_cmd_ip_info_st ip_information = 82;
	bool is_maintenance_enabled = 83;
	bool is_data_inverted = 84;
	string transport_mode = 85;
	bool fast_shutdown = 86;
	im_cmd_encaps_info encapsulation_information = 87;
	im_cmd_intf_type_info interface_type_information = 88;
	statsdbag_datarate data_rates = 89;
	im_cmd_if_stats interface_statistics = 90;
	stats_data l2_interface_statistics = 91;
	uint32 if_index = 92;
	bool is_intf_logical = 93;
	uint64 bandwidth64_bit = 94;
	uint64 max_bandwidth64_bit = 95;
}

