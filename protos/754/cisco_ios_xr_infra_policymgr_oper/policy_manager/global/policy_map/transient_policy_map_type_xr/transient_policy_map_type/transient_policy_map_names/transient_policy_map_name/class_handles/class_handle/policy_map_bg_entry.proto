//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

package cisco_ios_xr_infra_policymgr_oper.policy_manager.global.policy_map.transient_policy_map_type_xr.transient_policy_map_type.transient_policy_map_names.transient_policy_map_name.class_handles.class_handle;

message policy_map_bg_entry_KEYS {
	string type = 1;
	string policy_map_name = 2;
	uint32 inline_classhandle = 3;
}

message plmgr_var_val_un {
	string type = 1;
	string class_name = 2;
	uint32 uint8_val = 3;
	uint32 uint16_val = 4;
	uint32 uint32_val = 5;
	uint32 param_uint32_val = 6;
	uint32 dscp_val = 7;
	uint32 prec_val = 8;
}

message pmap_var_info_st {
	string name = 1;
	uint32 id = 2;
	plmgr_var_val_un val = 3;
}

message pmap_var_list_st {
	repeated uint32 offset = 1;
	repeated pmap_var_info_st pmap_var_list_arr = 2;
}

message uint8_rng_st {
	uint32 min = 1;
	uint32 max = 2;
}

message uint16_rng_st {
	uint32 min = 1;
	uint32 max = 2;
}

message proto_icmp_st {
	uint32 type = 1;
	uint32 code = 2;
}

message tcp_flag_st {
	uint32 value = 1;
	bool match_any = 2;
}

message uint32_rng_st {
	uint32 min = 1;
	uint32 max = 2;
}

message dei_bit_st {
	uint32 bit_value = 1;
}

message vlan_id_st {
	uint32 min = 1;
	uint32 max = 2;
	uint32 mask = 3;
}

message mac_addr_st {
	repeated uint32 mac_addr = 1;
	repeated uint32 mask = 2;
}

message match_domain_st {
	string domain_name = 1;
	string format_name = 2;
}

message match_nas_port_st {
	string sub_id = 1;
	string operator = 2;
	uint32 value = 3;
}

message match_ipv4_st {
	string prefix = 1;
	string mask = 2;
}

message match_ipv6_st {
	string prefix = 1;
	uint32 mask = 2;
}

message flow_key_array {
	repeated uint32 keys = 1;
	uint32 num = 2;
}

message flow_key_st {
	flow_key_array flow_keys = 1;
	uint32 max_count = 2;
	uint32 idle_timeout = 3;
}

message match_dhcp_client_id_st {
	uint32 flags = 1;
	string val = 2;
}

message class_match_data_un {
	string type = 1;
	repeated uint8_rng_st ipv4_dscp = 2;
	repeated uint8_rng_st ipv6_dscp = 3;
	repeated uint8_rng_st dscp = 4;
	repeated uint32 ipv4_prec = 5;
	repeated uint32 ipv6_prec = 6;
	repeated uint32 prec = 7;
	repeated uint32 discard_class = 8;
	repeated uint16_rng_st qos_group = 9;
	repeated uint8_rng_st traffic_class = 10;
	repeated uint16_rng_st proto = 11;
	proto_icmp_st icmp_v4 = 12;
	proto_icmp_st icmp_v6 = 13;
	repeated uint16_rng_st ipv4_packet_len = 14;
	repeated uint16_rng_st ipv6_packet_len = 15;
	repeated uint16_rng_st packet_len = 16;
	repeated uint8_rng_st flow_tag = 17;
	tcp_flag_st tcp_flag = 18;
	repeated uint8_rng_st icmpv4_type = 19;
	repeated uint8_rng_st icmpv4_code = 20;
	repeated uint8_rng_st icmpv6_type = 21;
	repeated uint8_rng_st icmpv6_code = 22;
	repeated uint32 mpls_exp = 23;
	repeated uint32 mpls_exp_imp = 24;
	repeated string mpls_disp_ipv4_acl = 25;
	repeated string mpls_disp_ipv6_acl = 26;
	repeated string mpls_disp_cl_map = 27;
	uint32 mpls_top_eos = 28;
	repeated uint32_rng_st mpls_top_label = 29;
	repeated uint32 cos = 30;
	repeated uint32 cos_inr = 31;
	dei_bit_st dei = 32;
	dei_bit_st dei_inr = 33;
	repeated vlan_id_st vlan = 34;
	repeated uint16_rng_st vlan_inr = 35;
	repeated uint16_rng_st fr_dlci = 36;
	mac_addr_st src_mac = 37;
	mac_addr_st dst_mac = 38;
	repeated uint32 atm_clp = 39;
	repeated uint32 fr_de = 40;
	uint32 fragment_type = 41;
	repeated string ipv4_acl = 42;
	repeated string ipv6_acl = 43;
	repeated string ether_service_acl = 44;
	repeated uint32 avail_id = 45;
	string authen_status = 46;
	repeated uint32 media_type = 47;
	string mlp_negotiated = 48;
	repeated uint32 subs_protocol = 49;
	repeated string dnis = 50;
	repeated string dnis_regex = 51;
	repeated match_domain_st domain = 52;
	repeated match_domain_st domain_regex = 53;
	repeated match_nas_port_st nas_port = 54;
	repeated string service_name = 55;
	repeated string service_name_regex = 56;
	repeated match_ipv4_st src_addr_ipv4 = 57;
	repeated match_ipv4_st dst_addr_ipv4 = 58;
	repeated match_ipv6_st src_addr_ipv6 = 59;
	repeated match_ipv6_st dst_addr_ipv6 = 60;
	repeated mac_addr_st src_addr_mac = 61;
	repeated string timer = 62;
	repeated string timer_regexp = 63;
	repeated string tunnel_name = 64;
	repeated string tunnel_name_regex = 65;
	repeated string user_name = 66;
	repeated string user_name_regex = 67;
	repeated string auth_username = 68;
	repeated string auth_username_regex = 69;
	repeated string unauth_username = 70;
	repeated string unauth_username_regex = 71;
	repeated string auth_domain = 72;
	repeated string auth_domain_regex = 73;
	repeated string unauth_domain = 74;
	repeated string unauth_domain_regex = 75;
	repeated string vendor_id = 76;
	repeated string vendor_id_regex = 77;
	repeated string access_interface = 78;
	repeated string input_interface = 79;
	repeated uint64 input_intfhdl = 80;
	repeated uint16_rng_st ethertype = 81;
	flow_key_st flow_key_data = 82;
	repeated match_dhcp_client_id_st dhcp_client_id = 83;
	repeated match_dhcp_client_id_st dhcp_client_id_regexp = 84;
	repeated string circuit_id = 85;
	repeated string circuit_id_regex = 86;
	repeated string remote_id = 87;
	repeated string remote_id_regex = 88;
	repeated uint16_rng_st src_port = 89;
	repeated uint16_rng_st dst_port = 90;
}

message class_match_info_st_item {
	class_match_data_un match_data = 1;
	uint32 flags = 2;
}

message class_match_info_st_entry {
	repeated class_match_info_st_item class_match_info_st = 1;
}

message inline_class_map_bg {
	string mode = 1;
	uint32 flags = 2;
	uint32 match_count = 3;
	class_match_info_st_entry match_infop = 4;
}

message pol_class_enc_un {
	string enc = 1;
	string class_name = 2;
	uint64 hd = 3;
	uint32 idx = 4;
	inline_class_map_bg inline_cmap = 5;
}

message class_map_bg_item {
	uint32 magic = 1;
	string name = 2;
	string type = 3;
	string mode = 4;
	uint32 flags = 5;
	uint32 match_count = 6;
	class_match_info_st_entry match_infop = 7;
	repeated uint32 chk_sum = 8;
	string description = 9;
}

message class_map_bg_entry {
	repeated class_map_bg_item class_map_bg = 1;
}

message pclass_nlri_info_st {
	repeated uint32 nlri = 1;
}

message action_mark_info_st {
	string type = 1;
	uint32 mark_flags = 2;
	uint32 value = 3;
}

message action_mark2_info_st {
	uint32 value = 1;
	uint32 value_overflow = 2;
	uint32 type = 3;
	uint32 mark_flags = 4;
}

message policy_param_uint32_st_ {
	uint32 value = 1;
	string unit = 2;
}

message action_wred_info_st {
	string type = 1;
	repeated uint8_rng_st match_ranges = 2;
	uint32 wred_flags = 3;
	policy_param_uint32_st_ min_threshold = 4;
	policy_param_uint32_st_ max_threshold = 5;
	policy_param_uint32_st_ probability = 6;
}

message action_encap_info_st {
	uint32 seq = 1;
}

message action_prio_info_st {
	uint32 prio_lvl = 1;
}

message action_bwrem_info_st {
	policy_param_uint32_st_ bwrem = 1;
}

message action_minbw_info_st {
	policy_param_uint32_st_ bw = 1;
}

message action_authen_aaa_st {
	string aaa_list_name = 1;
	string authen_password = 2;
}

message action_collect_id_st {
	string id = 1;
	string aaa_list_name = 2;
}

message action_decode_identifier_st {
	string id = 1;
	string format_name = 2;
}

message action_set_timer_st {
	string timer_name = 1;
	uint32 duration = 2;
	string absolute_time = 3;
}

message action_stop_timer_st {
	string timer_name = 1;
}

message action_acct_aaa_list_st {
	string aaa_list_name = 1;
	uint32 secs = 2;
}

message action_query_ancp_session_st {
	uint32 enable = 1;
}

message action_prepaid_cfg_st {
	string prepaid_config_profile_name = 1;
}

message action_timeout_idle_st {
	uint32 secs = 1;
}

message action_proxy_aaa_st {
	string aaa_list_name = 1;
}

message action_template_st {
	string template_name = 1;
	string aaa_list_name = 2;
	uint32 flags = 3;
}

message action_qlimit_info_st {
	string type = 1;
	uint32 qlimit_flags = 2;
	policy_param_uint32_st_ qlim = 3;
	policy_param_uint32_st_ atmclp_qlim = 4;
	repeated uint8_rng_st match_values = 5;
}

message action_accounting_event_st {
	string action = 1;
	string aaa_list_name = 2;
}

message action_authorize_id_st {
	uint32 id = 1;
	string aaa_list_name = 2;
	string format_name = 3;
	string password = 4;
}

message action_afmon_react_st {
	uint32 oper_id = 1;
	string description = 2;
	uint32 trig_num_intvls = 3;
	uint32 clone_ifh = 4;
	uint32 notif_actns = 5;
	uint32 criterion = 6;
	uint32 trig_type = 7;
	uint32 trig_relop = 8;
	string trig_level_1 = 9;
	string trig_level_2 = 10;
	uint32 alm_grp_thresh = 11;
	uint32 alm_type = 12;
	uint32 alm_severity = 13;
}

message action_httpr_info_st {
	string redirect_url = 1;
}

message action_punt_info_st {
	string sn_type = 1;
	uint32 sn_index = 2;
	string sn_name = 3;
	uint32 app_id = 4;
	uint32 local_id = 5;
	string vsnode_type = 6;
}

message action_copy_info_st {
	uint32 num_byte = 1;
	string sn_type = 2;
	uint32 sn_index = 3;
	string sn_name = 4;
	uint32 app_id = 5;
	uint32 local_id = 6;
	string vsnode_type = 7;
}

message action_sfrag_info_st {
	string name = 1;
}

message action_redirect_info_st {
	uint32 value = 1;
	uint32 type = 2;
}

message action_output_interface_info_st {
	string out_ifname = 1;
}

message action_service_function_path_st {
	uint32 path_id = 1;
	uint32 service_index = 2;
	string meta_name = 3;
	uint32 vs_index = 4;
}

message action_http_enrich_info_st {
	uint32 param_list = 1;
}

message police_action_un {
	string type = 1;
	action_mark_info_st mark = 2;
}

message action_police_info_st {
	policy_param_uint32_st_ rate = 1;
	policy_param_uint32_st_ burst = 2;
	policy_param_uint32_st_ peak_rate = 3;
	policy_param_uint32_st_ peak_burst = 4;
	policy_param_uint32_st_ cdvt = 5;
	repeated police_action_un conform_actns = 6;
	repeated police_action_un exceed_actns = 7;
	repeated police_action_un violate_actns = 8;
	pol_class_enc_un confclass_encode = 9;
	class_map_bg_entry confclass_p = 10;
	pol_class_enc_un excdclass_encode = 11;
	class_map_bg_entry excdclass_p = 12;
	uint32 flags = 13;
	uint32 police_flags = 14;
	string sbuck_name = 15;
	string sbuck_type = 16;
}

message action_shape_info_st {
	policy_param_uint32_st_ bw = 1;
	policy_param_uint32_st_ be = 2;
}

message policy_map_type_n_name_st {
	string name = 1;
	string type = 2;
}

message policy_map_hd_st {
	uint64 hd = 1;
	policy_map_bg_entry data_hd = 2;
}

message chld_pol_enc_un {
	string enc = 1;
	policy_map_type_n_name_st info = 2;
	policy_map_hd_st hd_info = 3;
}

message action_cac_info_st {
	uint32 cac_type = 1;
	uint32 idle_timeout = 2;
	policy_param_uint32_st_ flow_rate = 3;
	policy_param_uint32_st_ rate = 4;
}

message action_pfc_info_st {
	uint32 pfc_pause_set = 1;
	uint32 buffer_size_flag = 2;
	policy_param_uint32_st_ buffer_size = 3;
	policy_param_uint32_st_ pause_threshold = 4;
	policy_param_uint32_st_ resume_threshold = 5;
}

message action_afmon_flow_parm_info_st {
	uint32 max_mon_flows = 1;
	uint32 mon_interval = 2;
	uint32 intvl_hist = 3;
	uint32 flow_timeout = 4;
}

message action_afmon_ipcbr_info_st {
	string action_metric_type = 1;
	uint32 ip_pkt_rate = 2;
	policy_param_uint32_st_ ip_bit_rate = 3;
	policy_param_uint32_st_ media_bit_rate = 4;
	uint32 media_pkt_size = 5;
	uint32 media_pkts_per_ip = 6;
}

message afmon_rtp_clock_rate_st_ {
	uint32 pt = 1;
	uint32 frequency = 2;
}

message action_afmon_rtp_info_st {
	string action_metric_type = 1;
	uint32 min_sequential = 2;
	uint32 max_dropout = 3;
	uint32 max_misorder = 4;
	uint32 seq_ext_cop4 = 5;
	repeated afmon_rtp_clock_rate_st_ clock_rate = 6;
}

message action_afmon_mdi_info_st {
	string action_metric_type = 1;
	repeated uint32 pids = 2;
	uint32 filtered_pkt_rate = 3;
	uint32 ip_pkt_rate = 4;
	policy_param_uint32_st_ ip_bit_rate = 5;
}

message action_afmon_fmm_info_st {
	string fmm_name = 1;
}

message action_pbf_info_st {
	string addr = 1;
	string vrf = 2;
	uint32 rt_type = 3;
	string rt = 4;
}

message action_ipv4_nh_info_st {
	string ipv4_nh_addr = 1;
	string vrf_name = 2;
}

message action_ipv6_nh_info_st {
	string ipv4_nh_addr = 1;
	string vrf_name = 2;
}

message policy_action_datap_un {
	string type = 1;
	repeated action_mark_info_st mark = 2;
	repeated action_mark2_info_st mark2 = 3;
	repeated action_wred_info_st wred = 4;
	action_encap_info_st encap = 5;
	action_prio_info_st prio = 6;
	action_bwrem_info_st bwrem = 7;
	action_minbw_info_st min_bw = 8;
	action_authen_aaa_st authen_aaa = 9;
	action_collect_id_st collect_id = 10;
	action_decode_identifier_st decode_id = 11;
	action_set_timer_st set_timer = 12;
	action_stop_timer_st stop_timer = 13;
	action_acct_aaa_list_st acct_aaa_list = 14;
	action_query_ancp_session_st query_ancp = 15;
	action_prepaid_cfg_st prepaid_cfg = 16;
	action_timeout_idle_st timeout_idle = 17;
	action_proxy_aaa_st proxy_aaa = 18;
	action_template_st act_template = 19;
	action_template_st deact_template = 20;
	repeated action_qlimit_info_st qlimit = 21;
	action_accounting_event_st accounting_event_aaa = 22;
	action_authorize_id_st authorize_id = 23;
	repeated action_afmon_react_st afm_react = 24;
	action_httpr_info_st httpr = 25;
	action_punt_info_st punt = 26;
	action_copy_info_st copy = 27;
	action_sfrag_info_st sfrag = 28;
	action_redirect_info_st redirect = 29;
	action_output_interface_info_st out_intf = 30;
	action_service_function_path_st serv_func = 31;
	action_http_enrich_info_st http_enrich = 32;
	action_police_info_st police = 33;
	action_shape_info_st shape = 34;
	chld_pol_enc_un child_policy = 35;
	action_cac_info_st cac = 36;
	action_pfc_info_st pfc = 37;
	action_afmon_flow_parm_info_st flow_parm = 38;
	action_afmon_ipcbr_info_st ipcbr = 39;
	action_afmon_rtp_info_st rtp = 40;
	action_afmon_rtp_info_st rtp_mmr = 41;
	action_afmon_rtp_info_st rtp_j2k = 42;
	action_afmon_rtp_info_st rtp_voice = 43;
	action_afmon_mdi_info_st mdi = 44;
	action_afmon_mdi_info_st mdi_rtp = 45;
	action_afmon_fmm_info_st fmm = 46;
	repeated action_pbf_info_st pbf = 47;
	repeated action_ipv4_nh_info_st ipv4_nh = 48;
	repeated action_ipv6_nh_info_st ipv6_nh = 49;
	uint32 data_p = 50;
}

message policy_action_info_st_item {
	uint32 seq = 1;
	uint32 flags = 2;
	policy_action_datap_un actp = 3;
}

message policy_action_info_st_entry {
	repeated policy_action_info_st_item policy_action_info_st = 1;
}

message policy_class_info_bg_item {
	uint32 policy_class_hd = 1;
	uint32 seq = 2;
	uint32 flags = 3;
	string ctype = 4;
	pol_class_enc_un cl_encode = 5;
	class_map_bg_entry clmp_p = 6;
	uint32 num_actions = 7;
	uint32 version = 8;
	string exe_strat = 9;
	pclass_nlri_info_st nlri_infop = 10;
	policy_action_info_st_entry act_infop = 11;
}

message policy_class_info_bg_entry {
	repeated policy_class_info_bg_item policy_class_info_bg = 1;
}

message policy_event_info_bg_item {
	string event_type = 1;
	string cond_eval = 2;
	policy_class_info_bg_entry class_infop = 3;
	uint64 avl_tree = 4;
	uint32 flags = 5;
}

message policy_event_info_bg_entry {
	repeated policy_event_info_bg_item policy_event_info_bg = 1;
}

message policy_map_bg_item {
	string name = 1;
	string type = 2;
	uint32 magic = 3;
	uint32 flags = 4;
	uint32 num_classes = 5;
	uint32 max_hierarchy = 6;
	uint32 class_dflt_hrchy_depth = 7;
	uint32 num_policy_class_info = 8;
	uint32 table_id = 9;
	uint32 handle = 10;
	pmap_var_list_st pmap_var_list = 11;
	policy_event_info_bg_entry event_infop = 12;
	repeated uint32 chk_sum = 13;
	repeated uint32 rateless_chk_sum = 14;
	string description = 15;
	uint64 pclass_diff = 16;
}

message policy_map_bg_entry {
	repeated policy_map_bg_item policy_map_bg = 50;
}

